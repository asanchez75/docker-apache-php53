#!/usr/bin/env bash

# default config values
REGISTRY=cloud4wi
APPNAME=myapp

[ -f deploy/config ] && . ./deploy/config

if [ "$CONTAINER_DEPLOY" == "yes" ]; then
	echo -e "\n\n==> RESTARTING SERVICES\n"

	container_name=$APPNAME

	EXISTING_CONTAINER_ID=$(docker ps -q --filter "name=${container_name}$")
	if [ -n "$EXISTING_CONTAINER_ID" ]; then
		KILL_RESULT=$(docker kill $EXISTING_CONTAINER_ID) 
		[ $? -gt 0 ] && echo "Error killing container $container_name (id $EXISTING_CONTAINER_ID)" && exit 1
		echo "Killed running version of '$container_name': id was $EXISTING_CONTAINER_ID"
	fi
	EXISTING_CONTAINER_ID=$(docker ps -q -a --filter "name=${container_name}$")
	if [ -n "$EXISTING_CONTAINER_ID" ]; then
		RM_RESULT=$(docker rm $EXISTING_CONTAINER_ID)
		[ $? -gt 0 ] && echo "Error removing container $container_name" && exit 2
		echo "Removed stopped container of '$container_name': id was $EXISTING_CONTAINER_ID"
	fi

	echo "Launching the new version of '$container_name'"
	CONTAINER_ID=$(docker run -d --publish 16060:16060 --publish 16061:16061 --name ${container_name} --restart=on-failure --add-host "${mysql_host}:172.30.0.206" $REGISTRY/$APPNAME)
	[ $? -gt 0 ] && echo "Error running container ${container_name}" && exit 3

	echo -e "Launch successfull!\nContainer ${container_name} is running (id: $CONTAINER_ID)"
fi

echo -e "\n\n"
